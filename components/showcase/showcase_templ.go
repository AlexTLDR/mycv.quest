// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
// showcase component for mycv.quest

package showcase

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/AlexTLDR/mycv.quest/components/aspectratio"

func AspectRatioDefault() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<img src=\"/assets/img/aspect_ratio_placeholder.jpeg\" alt=\"Example image\" class=\"h-full w-full object-cover\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioVideo,
			Class: "rounded-md overflow-hidden",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func CVTemplateShowcase() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"space-y-8\"><div><h3 class=\"text-lg font-semibold text-foreground mb-4\">CV Template Previews</h3><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4\"><!-- Vantage CV Template --><div class=\"group\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"h-full w-full bg-gradient-to-br from-primary/5 to-accent/5 p-4 flex flex-col\"><div class=\"mb-3\"><div class=\"h-2 bg-primary/20 rounded w-3/4 mb-1\"></div><div class=\"h-1 bg-muted-foreground/30 rounded w-1/2\"></div></div><div class=\"space-y-2 flex-1\"><div class=\"h-1 bg-foreground/40 rounded w-full\"></div><div class=\"h-1 bg-foreground/30 rounded w-4/5\"></div><div class=\"h-1 bg-foreground/30 rounded w-3/5\"></div><div class=\"mt-2 h-1 bg-primary/30 rounded w-2/3\"></div><div class=\"h-1 bg-foreground/20 rounded w-5/6\"></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioPortrait,
			Class: "rounded-lg overflow-hidden border border-border group-hover:shadow-lg transition-all duration-300",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"mt-2\"><h4 class=\"font-medium text-card-foreground text-sm\">Vantage CV</h4><p class=\"text-xs text-muted-foreground\">Modern professional</p></div></div><!-- Basic Resume Template --><div class=\"group\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var5 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div class=\"h-full w-full bg-gradient-to-br from-secondary/5 to-muted/10 p-4 flex flex-col\"><div class=\"mb-3\"><div class=\"h-2 bg-secondary/20 rounded w-2/3 mb-1\"></div><div class=\"h-1 bg-muted-foreground/30 rounded w-2/5\"></div></div><div class=\"space-y-2 flex-1\"><div class=\"h-1 bg-foreground/30 rounded w-full\"></div><div class=\"h-1 bg-foreground/30 rounded w-5/6\"></div><div class=\"h-1 bg-foreground/30 rounded w-3/4\"></div><div class=\"mt-2 h-1 bg-foreground/30 rounded w-4/5\"></div><div class=\"h-1 bg-foreground/30 rounded w-3/5\"></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioPortrait,
			Class: "rounded-lg overflow-hidden border border-border group-hover:shadow-lg transition-all duration-300",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var5), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"mt-2\"><h4 class=\"font-medium text-card-foreground text-sm\">Basic Resume</h4><p class=\"text-xs text-muted-foreground\">Simple & clean</p></div></div><!-- Metronic CV Template --><div class=\"group\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var6 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"h-full w-full bg-gradient-to-br from-accent/5 to-primary/5 p-4 flex flex-col\"><div class=\"mb-3 text-center\"><div class=\"h-2 bg-accent/20 rounded w-2/3 mx-auto mb-1\"></div><div class=\"h-1 bg-muted-foreground/30 rounded w-1/3 mx-auto\"></div></div><div class=\"space-y-2 flex-1\"><div class=\"bg-accent/5 p-2 rounded\"><div class=\"h-1 bg-accent/30 rounded w-full mb-1\"></div><div class=\"h-1 bg-foreground/20 rounded w-3/4\"></div></div><div class=\"h-1 bg-foreground/30 rounded w-5/6\"></div><div class=\"h-1 bg-foreground/30 rounded w-4/5\"></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioPortrait,
			Class: "rounded-lg overflow-hidden border border-border group-hover:shadow-lg transition-all duration-300",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var6), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"mt-2\"><h4 class=\"font-medium text-card-foreground text-sm\">Metronic CV</h4><p class=\"text-xs text-muted-foreground\">Executive style</p></div></div><!-- SWE CV Template --><div class=\"group\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var7 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<div class=\"h-full w-full bg-gradient-to-br from-primary/5 to-secondary/5 p-4 flex\"><div class=\"w-1/4 pr-2 border-r border-border/20\"><div class=\"space-y-1\"><div class=\"h-1 bg-primary/30 rounded w-full\"></div><div class=\"h-1 bg-muted/30 rounded w-3/4\"></div><div class=\"h-1 bg-muted/30 rounded w-2/3\"></div></div></div><div class=\"flex-1 pl-2\"><div class=\"space-y-1\"><div class=\"h-1 bg-primary/30 rounded w-4/5\"></div><div class=\"h-1 bg-foreground/20 rounded w-full\"></div><div class=\"h-1 bg-foreground/20 rounded w-5/6\"></div><div class=\"h-1 bg-foreground/20 rounded w-3/5\"></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioPortrait,
			Class: "rounded-lg overflow-hidden border border-border group-hover:shadow-lg transition-all duration-300",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var7), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "<div class=\"mt-2\"><h4 class=\"font-medium text-card-foreground text-sm\">SWE CV</h4><p class=\"text-xs text-muted-foreground\">Software engineer</p></div></div><!-- Imprecv Template --><div class=\"group\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var8 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<div class=\"h-full w-full bg-gradient-to-br from-secondary/5 to-accent/5 p-4 flex flex-col\"><div class=\"mb-3\"><div class=\"h-2 bg-secondary/20 rounded w-5/6 mb-1\"></div><div class=\"h-1 bg-muted-foreground/30 rounded w-2/5\"></div></div><div class=\"space-y-2 flex-1\"><div class=\"bg-secondary/5 p-2 rounded\"><div class=\"h-1 bg-secondary/30 rounded w-full mb-1\"></div><div class=\"h-1 bg-foreground/20 rounded w-4/5\"></div></div><div class=\"h-1 bg-foreground/30 rounded w-full\"></div><div class=\"h-1 bg-foreground/30 rounded w-3/4\"></div><div class=\"bg-accent/5 p-1 rounded\"><div class=\"h-1 bg-accent/30 rounded w-2/3\"></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioPortrait,
			Class: "rounded-lg overflow-hidden border border-border group-hover:shadow-lg transition-all duration-300",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var8), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<div class=\"mt-2\"><h4 class=\"font-medium text-card-foreground text-sm\">Imprecv</h4><p class=\"text-xs text-muted-foreground\">Impressive design</p></div></div></div></div><!-- Template Features Comparison --><div><h3 class=\"text-lg font-semibold text-foreground mb-4\">Template Features Comparison</h3><div class=\"bg-card p-4 rounded-lg border border-border\"><div class=\"overflow-x-auto\"><table class=\"w-full text-sm\"><thead><tr class=\"border-b border-border\"><th class=\"text-left py-2 text-card-foreground\">Template</th><th class=\"text-center py-2 text-card-foreground\">Best For</th><th class=\"text-center py-2 text-card-foreground\">Style</th><th class=\"text-center py-2 text-card-foreground\">Complexity</th><th class=\"text-center py-2 text-card-foreground\">ATS Friendly</th></tr></thead> <tbody class=\"text-muted-foreground\"><tr class=\"border-b border-border/50\"><td class=\"py-2 font-medium text-card-foreground\">Vantage CV</td><td class=\"py-2 text-center\">Tech Professionals</td><td class=\"py-2 text-center\">Modern</td><td class=\"py-2 text-center\">Medium</td><td class=\"py-2 text-center\">✓</td></tr><tr class=\"border-b border-border/50\"><td class=\"py-2 font-medium text-card-foreground\">Basic Resume</td><td class=\"py-2 text-center\">Entry Level</td><td class=\"py-2 text-center\">Traditional</td><td class=\"py-2 text-center\">Simple</td><td class=\"py-2 text-center\">✓✓</td></tr><tr class=\"border-b border-border/50\"><td class=\"py-2 font-medium text-card-foreground\">Metronic CV</td><td class=\"py-2 text-center\">Executives</td><td class=\"py-2 text-center\">Professional</td><td class=\"py-2 text-center\">Medium</td><td class=\"py-2 text-center\">✓</td></tr><tr class=\"border-b border-border/50\"><td class=\"py-2 font-medium text-card-foreground\">SWE CV</td><td class=\"py-2 text-center\">Software Engineers</td><td class=\"py-2 text-center\">Technical</td><td class=\"py-2 text-center\">Medium</td><td class=\"py-2 text-center\">✓</td></tr><tr><td class=\"py-2 font-medium text-card-foreground\">Imprecv</td><td class=\"py-2 text-center\">Creative Fields</td><td class=\"py-2 text-center\">Bold</td><td class=\"py-2 text-center\">High</td><td class=\"py-2 text-center\">○</td></tr></tbody></table></div></div></div><!-- Different Aspect Ratios Demo --><div><h3 class=\"text-lg font-semibold text-foreground mb-4\">Aspect Ratio Examples</h3><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\"><!-- Square --><div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var9 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div class=\"h-full w-full bg-gradient-to-br from-primary/20 to-transparent flex items-center justify-center\"><span class=\"text-foreground font-medium\">Square</span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioSquare,
			Class: "rounded-lg overflow-hidden bg-muted",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var9), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "<p class=\"text-xs text-muted-foreground mt-2 text-center\">1:1 Ratio</p></div><!-- Video --><div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var10 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<div class=\"h-full w-full bg-gradient-to-br from-accent/20 to-transparent flex items-center justify-center\"><span class=\"text-foreground font-medium\">Video</span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioVideo,
			Class: "rounded-lg overflow-hidden bg-muted",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var10), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<p class=\"text-xs text-muted-foreground mt-2 text-center\">16:9 Ratio</p></div><!-- Portrait --><div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var11 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<div class=\"h-full w-full bg-gradient-to-br from-secondary/20 to-transparent flex items-center justify-center\"><span class=\"text-foreground font-medium\">Portrait</span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioPortrait,
			Class: "rounded-lg overflow-hidden bg-muted",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var11), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<p class=\"text-xs text-muted-foreground mt-2 text-center\">3:4 Ratio</p></div><!-- Wide --><div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var12 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "<div class=\"h-full w-full bg-gradient-to-br from-primary/20 to-accent/10 flex items-center justify-center\"><span class=\"text-foreground font-medium\">Wide</span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = aspectratio.AspectRatio(aspectratio.Props{
			Ratio: aspectratio.RatioWide,
			Class: "rounded-lg overflow-hidden bg-muted",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var12), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "<p class=\"text-xs text-muted-foreground mt-2 text-center\">2:1 Ratio</p></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
