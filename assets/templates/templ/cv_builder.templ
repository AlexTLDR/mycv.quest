package templates

import (
	"github.com/AlexTLDR/mycv.quest/components/button"
	"github.com/AlexTLDR/mycv.quest/components/card"
	"github.com/AlexTLDR/mycv.quest/components/form"
	"github.com/AlexTLDR/mycv.quest/components/input"
	"github.com/AlexTLDR/mycv.quest/components/label"
)

type Template struct {
	ID           string
	Name         string
	Description  string
	Version      string
	Author       string
	PreviewImage string
	Repository   string
}

templ CVBuilderScripts() {
	<script>
		// Simple form management without Alpine.js
		function addWorkExperience() {
			const container = document.getElementById('work-experience-container');
			const count = container.children.length;
			const newExperience = createWorkExperienceItem(count);
			container.appendChild(newExperience);
		}

		function addEducation() {
			const container = document.getElementById('education-container');
			const count = container.children.length;
			const newEducation = createEducationItem(count);
			container.appendChild(newEducation);
		}

		function removeWorkExperience(button) {
			const container = document.getElementById('work-experience-container');
			if (container.children.length > 1) {
				button.closest('.work-experience-item').remove();
			}
		}

		function removeEducation(button) {
			const container = document.getElementById('education-container');
			if (container.children.length > 1) {
				button.closest('.education-item').remove();
			}
		}

		function createWorkExperienceItem(index) {
			const div = document.createElement('div');
			div.className = 'work-experience-item border rounded-lg p-4';
			div.innerHTML = `
				<div class="flex justify-between items-center mb-4">
					<h4 class="text-sm font-medium text-muted-foreground">Work Experience ${index + 1}</h4>
					<button type="button" onclick="removeWorkExperience(this)" class="text-red-500 hover:text-red-700 text-sm">Remove</button>
				</div>
				<div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Job Title</label>
						<input type="text" name="workExperience[${index}][jobTitle]" placeholder="e.g., Software Engineer" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Company</label>
						<input type="text" name="workExperience[${index}][company]" placeholder="Company name" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Start Date</label>
						<input type="date" name="workExperience[${index}][startDate]" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">End Date</label>
						<input type="date" name="workExperience[${index}][endDate]" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
				</div>
				<div>
					<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Job Description</label>
					<textarea name="workExperience[${index}][description]" rows="3" class="flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" placeholder="Describe your responsibilities and achievements..."></textarea>
				</div>
			`;
			return div;
		}

		function createEducationItem(index) {
			const div = document.createElement('div');
			div.className = 'education-item border rounded-lg p-4';
			div.innerHTML = `
				<div class="flex justify-between items-center mb-4">
					<h4 class="text-sm font-medium text-muted-foreground">Education ${index + 1}</h4>
					<button type="button" onclick="removeEducation(this)" class="text-red-500 hover:text-red-700 text-sm">Remove</button>
				</div>
				<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Degree</label>
						<input type="text" name="education[${index}][degree]" placeholder="e.g., Bachelor of Science" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Field of Study</label>
						<input type="text" name="education[${index}][field]" placeholder="e.g., Computer Science" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">School/University</label>
						<input type="text" name="education[${index}][school]" placeholder="Institution name" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
					<div>
						<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Graduation Year</label>
						<input type="number" name="education[${index}][graduationYear]" placeholder="2024" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" />
					</div>
				</div>
			`;
			return div;
		}
	</script>
}

templ CVBuilder(templates []Template) {
	<div class="container mx-auto p-6 max-w-4xl">
		<div class="mb-8">
			<h1 class="text-3xl font-bold bg-gradient-to-r from-primary to-violet-600 bg-clip-text text-transparent mb-2">CV Builder</h1>
			<p class="text-muted-foreground">Create your professional CV with our easy-to-use builder</p>
		</div>
		<form class="space-y-8" method="post" action="/cv-builder">
			<!-- Personal Information Section -->
			@card.Card(card.Props{
				Class: "p-6 border-l-4 border-l-primary",
			}) {
				@card.Header() {
					@card.Title() {
						<span class="text-primary">Personal Information</span>
					}
					@card.Description() {
						Enter your basic personal details
					}
				}
				@card.Content() {
					<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
						@form.Item() {
							@label.Label(label.Props{
								For: "firstName",
							}) {
								First Name
							}
							@input.Input(input.Props{
								Type:        input.TypeText,
								ID:          "firstName",
								Name:        "firstName",
								Placeholder: "Enter your first name",
							})
						}
						@form.Item() {
							@label.Label(label.Props{
								For: "lastName",
							}) {
								Last Name
							}
							@input.Input(input.Props{
								Type:        input.TypeText,
								ID:          "lastName",
								Name:        "lastName",
								Placeholder: "Enter your last name",
							})
						}
						@form.Item() {
							@label.Label(label.Props{
								For: "email",
							}) {
								Email
							}
							@input.Input(input.Props{
								Type:        input.TypeEmail,
								ID:          "email",
								Name:        "email",
								Placeholder: "your.email@example.com",
							})
						}
						@form.Item() {
							@label.Label(label.Props{
								For: "phone",
							}) {
								Phone
							}
							@input.Input(input.Props{
								Type:        input.TypeTel,
								ID:          "phone",
								Name:        "phone",
								Placeholder: "+1 (555) 123-4567",
							})
						}
					</div>
					<div class="mt-4">
						@form.Item() {
							@label.Label(label.Props{
								For: "address",
							}) {
								Address
							}
							@input.Input(input.Props{
								Type:        input.TypeText,
								ID:          "address",
								Name:        "address",
								Placeholder: "Enter your full address",
							})
						}
					</div>
					<div class="mt-4">
						@form.Item() {
							@label.Label(label.Props{
								For: "template",
							}) {
								CV Template
							}
							<select
								id="template"
								name="template"
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							>
								<option value="">Select a template</option>
								for _, template := range templates {
									<option value={ template.ID }>{ template.Name }</option>
								}
							</select>
						}
					</div>
				}
			}
			<!-- Professional Summary Section -->
			@card.Card(card.Props{
				Class: "border-l-4 border-l-primary",
			}) {
				@card.Header() {
					@card.Title() {
						<span class="text-primary">Professional Summary</span>
					}
					@card.Description() {
						Write a brief overview of your professional background
					}
				}
				@card.Content() {
					@form.Item() {
						@label.Label(label.Props{
							For: "summary",
						}) {
							Summary
						}
						<textarea
							id="summary"
							name="summary"
							rows="4"
							class="flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							placeholder="Describe your professional background, key skills, and career objectives..."
						></textarea>
					}
				}
			}
			<!-- Work Experience Section -->
			@card.Card(card.Props{
				Class: "border-l-4 border-l-primary",
			}) {
				@card.Header() {
					@card.Title() {
						<span class="text-primary">Work Experience</span>
					}
					@card.Description() {
						Add your work history and achievements
					}
				}
				@card.Content() {
					<div id="work-experience-container" class="space-y-4">
						<!-- Initial work experience item -->
						<div class="work-experience-item border rounded-lg p-4">
							<div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
								@form.Item() {
									@label.Label(label.Props{}) {
										Job Title
									}
									<input
										type="text"
										name="workExperience[0][jobTitle]"
										placeholder="e.g., Software Engineer"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
								@form.Item() {
									@label.Label(label.Props{}) {
										Company
									}
									<input
										type="text"
										name="workExperience[0][company]"
										placeholder="Company name"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
								@form.Item() {
									@label.Label(label.Props{}) {
										Start Date
									}
									<input
										type="date"
										name="workExperience[0][startDate]"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
								@form.Item() {
									@label.Label(label.Props{}) {
										End Date
									}
									<input
										type="date"
										name="workExperience[0][endDate]"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
							</div>
							@form.Item() {
								@label.Label(label.Props{}) {
									Job Description
								}
								<textarea
									name="workExperience[0][description]"
									rows="3"
									class="flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									placeholder="Describe your responsibilities and achievements..."
								></textarea>
							}
						</div>
					</div>
					<div class="mt-4">
						<button type="button" onclick="addWorkExperience()" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-primary/20 bg-primary/5 hover:bg-primary/10 text-primary hover:text-primary h-10 px-4 py-2">
							<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
							</svg>
							Add Work Experience
						</button>
					</div>
				}
			}
			<!-- Education Section -->
			@card.Card(card.Props{
				Class: "border-l-4 border-l-primary",
			}) {
				@card.Header() {
					@card.Title() {
						<span class="text-primary">Education</span>
					}
					@card.Description() {
						Add your educational background
					}
				}
				@card.Content() {
					<div id="education-container" class="space-y-4">
						<!-- Initial education item -->
						<div class="education-item border rounded-lg p-4">
							<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
								@form.Item() {
									@label.Label(label.Props{}) {
										Degree
									}
									<input
										type="text"
										name="education[0][degree]"
										placeholder="e.g., Bachelor of Science"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
								@form.Item() {
									@label.Label(label.Props{}) {
										Field of Study
									}
									<input
										type="text"
										name="education[0][field]"
										placeholder="e.g., Computer Science"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
								@form.Item() {
									@label.Label(label.Props{}) {
										School/University
									}
									<input
										type="text"
										name="education[0][school]"
										placeholder="Institution name"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
								@form.Item() {
									@label.Label(label.Props{}) {
										Graduation Year
									}
									<input
										type="number"
										name="education[0][graduationYear]"
										placeholder="2024"
										class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									/>
								}
							</div>
						</div>
					</div>
					<div class="mt-4">
						<button type="button" onclick="addEducation()" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-primary/20 bg-primary/5 hover:bg-primary/10 text-primary hover:text-primary h-10 px-4 py-2">
							<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
							</svg>
							Add Education
						</button>
					</div>
				}
			}
			<!-- Skills Section -->
			@card.Card(card.Props{
				Class: "border-l-4 border-l-primary",
			}) {
				@card.Header() {
					@card.Title() {
						<span class="text-primary">Skills</span>
					}
					@card.Description() {
						List your technical and professional skills
					}
				}
				@card.Content() {
					@form.Item() {
						@label.Label(label.Props{
							For: "skills",
						}) {
							Skills (comma-separated)
						}
						@input.Input(input.Props{
							Type:        input.TypeText,
							ID:          "skills",
							Name:        "skills",
							Placeholder: "JavaScript, Python, React, Node.js, SQL...",
						})
					}
				}
			}
			<!-- Action Buttons -->
			<div class="flex gap-4 justify-end pt-6 border-t border-border">
				@button.Button(button.Props{
					Variant: button.VariantOutline,
					Type:    button.TypeButton,
				}) {
					<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
					</svg>
					Preview CV
				}
				@button.Button(button.Props{
					Type: button.TypeSubmit,
				}) {
					<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
					</svg>
					Generate CV
				}
			</div>
		</form>
	</div>
}

templ CVBuilderPage(data PageData, templates []Template) {
	@Base("CV Builder - MyCV.Quest", data, nil, CVBuilder(templates), CVBuilderScripts())
}
