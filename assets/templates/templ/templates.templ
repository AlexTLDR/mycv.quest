package templates

import (
	"github.com/AlexTLDR/mycv.quest/components/button"
	"github.com/AlexTLDR/mycv.quest/components/card"
)

type TemplateInfo struct {
	ID           string
	Name         string
	Description  string
	Version      string
	Author       string
	PreviewImage string
	Repository   string
}

templ Templates(templates []TemplateInfo) {
	<div class="container mx-auto p-6 max-w-6xl">
		<div class="mb-12 text-center">
			<h1 class="text-4xl font-bold bg-gradient-to-r from-primary to-violet-600 bg-clip-text text-transparent mb-4">CV Templates</h1>
			<p class="text-xl text-muted-foreground max-w-2xl mx-auto">Choose from our collection of professional CV templates designed to make you stand out</p>
		</div>
		<div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12 items-stretch">
			for _, template := range templates {
				@card.Card(card.Props{
					Class: "group hover:shadow-xl transition-all duration-300 border-2 hover:border-primary/20 h-full",
				}) {
					@card.Content(card.ContentProps{
						Class: "flex flex-col h-full",
					}) {
						<!-- Template Preview Area -->
						<div class="bg-gradient-to-br from-muted/50 to-muted/30 rounded-xl mb-6 min-h-[280px] flex items-center justify-center border border-border/50 overflow-hidden">
							if template.PreviewImage != "" {
								<img
									src={ "/static/templates/" + template.ID + "/" + template.PreviewImage }
									alt={ "Preview of " + template.Name }
									class="w-full h-full object-cover rounded-lg"
									onerror="this.style.display='none'; this.nextElementSibling.style.display='flex'"
								/>
								<div class="text-center hidden">
									<div class="w-20 h-24 mx-auto mb-4 bg-primary/10 rounded-lg border-2 border-dashed border-primary/30 flex items-center justify-center">
										<svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
										</svg>
									</div>
									<p class="text-sm font-medium text-foreground">Preview Available Soon</p>
									<p class="text-xs text-muted-foreground mt-1">{ template.ID }.typ</p>
								</div>
							} else {
								<div class="text-center p-8">
									<div class="w-20 h-24 mx-auto mb-4 bg-primary/10 rounded-lg border-2 border-dashed border-primary/30 flex items-center justify-center">
										<svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
										</svg>
									</div>
									<p class="text-sm font-medium text-foreground">Preview Available Soon</p>
									<p class="text-xs text-muted-foreground mt-1">{ template.ID }.typ</p>
								</div>
							}
						</div>
						<!-- Template Info -->
						<div class="mb-6 flex-grow">
							<h3 class="text-2xl font-bold text-primary mb-2">{ template.Name }</h3>
							<p class="text-muted-foreground mb-4 leading-relaxed">{ template.Description }</p>
							<div class="flex items-center justify-between text-sm">
								<div class="space-y-1">
									<div class="flex items-center gap-2">
										<span class="text-muted-foreground">Version:</span>
										<span class="font-semibold text-foreground">{ template.Version }</span>
									</div>
									<div class="flex items-center gap-2">
										<span class="text-muted-foreground">Author:</span>
										<span class="font-semibold text-foreground">{ template.Author }</span>
									</div>
								</div>
							</div>
						</div>
						<!-- Action Buttons -->
						<div class="flex flex-col sm:flex-row gap-2 sm:gap-3">
							<a href={ templ.URL("/cv-builder?template=" + template.ID) } class="flex-1">
								@button.Button(button.Props{
									Class: "w-full text-base py-3",
									Type:  button.TypeButton,
								}) {
									<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
									</svg>
									Use This Template
								}
							</a>
							<div class="flex gap-2 sm:gap-3 sm:flex-shrink-0">
								<a href={ templ.URL("/templates/" + template.ID + "/preview") } target="_blank" rel="noopener noreferrer" class="flex-1 sm:flex-none">
									@button.Button(button.Props{
										Variant: button.VariantOutline,
										Type:    button.TypeButton,
										Class:   "w-full sm:w-auto px-4 py-3",
									}) {
										<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
										</svg>
									}
								</a>
								if template.Repository != "" {
									<a href={ templ.URL(template.Repository) } target="_blank" rel="noopener noreferrer" class="flex-1 sm:flex-none">
										@button.Button(button.Props{
											Variant: button.VariantOutline,
											Type:    button.TypeButton,
											Class:   "w-full sm:w-auto px-4 py-3",
										}) {
											<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
												<path d="M10,1 C15.523,1 20,5.59 20,11.253 C20,15.782 17.138,19.624 13.167,20.981 C12.66,21.082 12.48,20.762 12.48,20.489 C12.48,20.151 12.492,19.047 12.492,17.675 C12.492,16.719 12.172,16.095 11.813,15.777 C14.04,15.523 16.38,14.656 16.38,10.718 C16.38,9.598 15.992,8.684 15.35,7.966 C15.454,7.707 15.797,6.664 15.252,5.252 C15.252,5.252 14.414,4.977 12.505,6.303 C11.706,6.076 10.85,5.962 10,5.958 C9.15,5.962 8.295,6.076 7.497,6.303 C5.586,4.977 4.746,5.252 4.746,5.252 C4.203,6.664 4.546,7.707 4.649,7.966 C4.01,8.684 3.619,9.598 3.619,10.718 C3.619,14.646 5.954,15.526 8.175,15.785 C7.889,16.041 7.63,16.493 7.54,17.156 C6.97,17.418 5.522,17.871 4.63,16.304 C4.63,16.304 4.101,15.319 3.097,15.247 C3.097,15.247 2.122,15.234 3.029,15.87 C3.029,15.87 3.684,16.185 4.139,17.37 C4.139,17.37 4.726,19.2 7.508,18.58 C7.513,19.437 7.522,20.245 7.522,20.489 C7.522,20.76 7.338,21.077 6.839,20.982 C2.865,19.627 0,15.783 0,11.253 C0,5.59 4.478,1 10,1"></path>
											</svg>
										}
									</a>
								}
							</div>
						</div>
					}
				}
			}
		</div>
		if len(templates) == 0 {
			<div class="text-center py-16">
				@card.Card(card.Props{
					Class: "max-w-md mx-auto",
				}) {
					@card.Content() {
						<div class="p-8 text-center">
							<div class="w-16 h-16 mx-auto mb-4 bg-muted rounded-full flex items-center justify-center">
								<svg class="w-8 h-8 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
								</svg>
							</div>
							<h3 class="text-xl font-semibold mb-2">No Templates Found</h3>
							<p class="text-muted-foreground mb-4">Add templates to the assets/templates/typst/ directory</p>
							<p class="text-sm text-muted-foreground">Each template should have a config.yaml and template.typ file</p>
						</div>
					}
				}
			</div>
		}
		<div class="text-center pt-8 border-t border-border">
			<a href="/cv-builder" class="inline-flex items-center text-lg text-primary hover:text-primary/80 transition-colors font-medium">
				<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
				</svg>
				Back to CV Builder
			</a>
		</div>
	</div>
}

templ TemplatesPage(data PageData, templates []TemplateInfo) {
	@Base("Templates - MyCV.Quest", data, nil, Templates(templates))
}
